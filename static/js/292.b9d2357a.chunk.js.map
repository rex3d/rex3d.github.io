{"version":3,"file":"static/js/292.b9d2357a.chunk.js","mappings":"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","sources":["pages/CustomOrderAndStatusPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabase';\n\n// --- Custom Order Form Component (from CustomOrderPage.js) ---\nconst CustomOrderForm = ({ setOrderIdForStatusCheck }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        description: '',\n        sku: '', // New field for SKU\n        dimensions: '',\n        color: '#FFFFFF',\n        purpose: '',\n        material: '',\n        precision: '',\n        quantity: 1,\n    });\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [status, setStatus] = useState(''); // 'sending', 'success', 'error'\n    const navigate = useNavigate(); // Dodane\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({\n            ...prev,\n            [name]: name === 'quantity' ? parseInt(value, 10) || 0 : value\n        }));\n    };\n\n    const handleFileChange = (e) => {\n        setSelectedFiles(Array.from(e.target.files));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setStatus('sending');\n\n        const orderId = `REX3D-${Date.now()}`;\n        let fileUrls = [];\n\n        try {\n            if (selectedFiles.length > 0) {\n                for (const file of selectedFiles) {\n                    const fileExtension = file.name.split('.').pop();\n                    const filePath = `${orderId}/${Date.now()}-${file.name}`;\n                    \n                    const { error: uploadError } = await supabase.storage\n                        .from('custom-order-files')\n                        .upload(filePath, file, { cacheControl: '3600', upsert: false });\n\n                    if (uploadError) {\n                        console.error('File upload error:', uploadError);\n                        throw new Error('Nie udało się przesłać pliku: ' + file.name);\n                    }\n                    const { data: publicUrlData } = supabase.storage.from('custom-order-files').getPublicUrl(filePath);\n                    fileUrls.push(publicUrlData.publicUrl);\n                }\n            }\n\n            const { error: insertError } = await supabase.from('custom_orders').insert([{\n                order_id: orderId,\n                customer_name: formData.name,\n                customer_email: formData.email,\n                description: formData.description,\n                sku: formData.sku || null, // Add SKU field\n                color_hex: formData.color,\n                dimensions: formData.dimensions,\n                purpose: formData.purpose,\n                material: formData.material,\n                precision: formData.precision,\n                quantity: formData.quantity,\n                file_urls: fileUrls, // Changed to file_urls\n                status: 'nowe'\n            }]);\n\n            if (insertError) {\n                console.error('Supabase submission error:', insertError);\n                throw new Error('Nie udało się zapisać zamówienia.');\n            }\n\n            setStatus('success');\n            navigate('/podziekowanie', { state: { orderId } }); // Przekierowanie na ThankYouPage\n        } catch (error) {\n            console.error('Submission failed:', error.message);\n            setStatus('error');\n        }\n    };\n\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-10\">\n                {status === 'error' && <div className=\"alert alert-danger\">Wystąpił błąd podczas wysyłania formularza. Sprawdź konsolę, aby uzyskać więcej informacji.</div>}\n                {status === 'success' && <div className=\"alert alert-success\">Twoje zapytanie zostało wysłane! Przekierowuję na stronę podziękowania...</div>}\n                <form onSubmit={handleSubmit}>\n                    <div className=\"card mb-4 shadow-sm\">\n                        <div className=\"card-header bg-light fw-bold\">Dane kontaktowe i opis projektu</div>\n                        <div className=\"card-body\">\n                            <div className=\"row g-3\">\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"name\" className=\"form-label\">Imię i Nazwisko</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" value={formData.name} onChange={handleChange} required />\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"email\" className=\"form-label\">Adres E-mail</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"email\" name=\"email\" value={formData.email} onChange={handleChange} required />\n                                </div>\n                                <div className=\"col-12\">\n                                    <label htmlFor=\"description\" className=\"form-label\">Opis projektu</label>\n                                    <textarea className=\"form-control\" id=\"description\" name=\"description\" rows=\"5\" value={formData.description} onChange={handleChange} required placeholder=\"Opisz co chciałbyś wydrukować, jakie ma mieć zastosowanie, itp.\"></textarea>\n                                </div>\n                                <div className=\"col-12\">\n                                    <label htmlFor=\"sku\" className=\"form-label\">SKU produktu (jeśli zamawiasz niestandardową wersję istniejącego produktu)</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"sku\" name=\"sku\" value={formData.sku || ''} onChange={handleChange} placeholder=\"Opcjonalnie: Wpisz SKU istniejącego produktu\" />\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"dimensions\" className=\"form-label\">Przybliżone wymiary (np. 10cm x 5cm x 3cm)</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"dimensions\" name=\"dimensions\" value={formData.dimensions} onChange={handleChange} />\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"color\" className=\"form-label\">Preferowany kolor</label>\n                                    <input type=\"color\" className=\"form-control form-control-color\" id=\"color\" name=\"color\" value={formData.color} onChange={handleChange} title=\"Wybierz kolor\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card mb-4 shadow-sm\">\n                        <div className=\"card-header bg-light fw-bold\">Szczegóły techniczne</div>\n                        <div className=\"card-body\">\n                            <div className=\"row g-3\">\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"purpose\" className=\"form-label\">Przeznaczenie modelu</label>\n                                    <select className=\"form-select\" id=\"purpose\" name=\"purpose\" value={formData.purpose} onChange={handleChange}>\n                                        <option value=\"\">Wybierz...</option>\n                                        <option value=\"prototyp\">Prototyp</option>\n                                        <option value=\"funkcjonalny\">Element funkcjonalny</option>\n                                        <option value=\"ozdoba\">Ozdoba/Figurka</option>\n                                        <option value=\"zabawka\">Zabawka</option>\n                                        <option value=\"inny\">Inny</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"material\" className=\"form-label\">Preferowany materiał</label>\n                                    <select className=\"form-select\" id=\"material\" name=\"material\" value={formData.material} onChange={handleChange}>\n                                        <option value=\"\">Wybierz...</option>\n                                        <option value=\"PLA\">PLA</option>\n                                        <option value=\"PETG\">PETG</option>\n                                        <option value=\"ABS\">ABS</option>\n                                        <option value=\"zywica\">Żywica</option>\n                                        <option value=\"inny\">Inny</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"precision\" className=\"form-label\">Wymagana precyzja/jakość powierzchni</label>\n                                    <select className=\"form-select\" id=\"precision\" name=\"precision\" value={formData.precision} onChange={handleChange}>\n                                        <option value=\"\">Wybierz...</option>\n                                        <option value=\"standardowa\">Standardowa</option>\n                                        <option value=\"wysoka\">Wysoka</option>\n                                        <option value=\"gladka\">Gładka (wymaga obróbki)</option>\n                                    </select>\n                                </div>\n\n                                <div className=\"col-md-6\">\n                                    <label htmlFor=\"quantity\" className=\"form-label\">Ilość sztuk</label>\n                                    <input type=\"number\" className=\"form-control\" id=\"quantity\" name=\"quantity\" value={formData.quantity} onChange={handleChange} min=\"1\" />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"card mb-4 shadow-sm\">\n                        <div className=\"card-header bg-light fw-bold\">Załączniki</div>\n                        <div className=\"card-body\">\n                            <div className=\"mb-3\">\n                                <label htmlFor=\"file\" className=\"form-label\">Załącz plik (opcjonalnie)</label>\n                                <input type=\"file\" className=\"form-control\" id=\"file\" name=\"file\" onChange={handleFileChange} multiple />\n                                {selectedFiles.length > 0 && <p className=\"text-muted mt-2\">Wybrane pliki: {selectedFiles.map(file => file.name).join(', ')}</p>}\n                            </div>\n                            <p className=\"small text-muted mt-3\">Możliwość załączenia plików (szkiców, modeli .stl) zostanie udostępniona w dalszej korespondencji mailowej.</p>\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary w-100 mt-3\" disabled={status === 'sending'}>\n                        {status === 'sending' ? 'Wysyłanie...' : 'Wyślij zapytanie o zamówienie'}\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\n// --- Order Status Display Component (from OrderStatusPage.js) ---\nconst OrderStatusDisplay = ({ initialOrderId }) => {\n    const [orderId, setOrderId] = useState(initialOrderId || '');\n    const [order, setOrder] = useState(null);\n    const [comments, setComments] = useState([]); // New state for comments\n    const [newComment, setNewComment] = useState(''); // State for new comment input\n    const [status, setStatus] = useState(initialOrderId ? 'loading' : ''); // 'loading', 'found', 'not_found', 'error'\n\n    // Define status steps for progress bar\n    const statusSteps = [\n        { status: 'nowe', label: 'Nowe' },\n        { status: 'wycena w toku', label: 'Wycena' },\n        { status: 'oczekiwanie na akceptację', label: 'Oczekiwanie na akceptację' },\n        { status: 'zaakceptowane', label: 'Zaakceptowane' },\n        { status: 'w realizacji', label: 'W Realizacji' },\n        { status: 'gotowe do odbioru', label: 'Gotowe do Odbioru' },\n        { status: 'zakończone', label: 'Zakończone' }\n    ];\n\n    // Calculate current step index\n    const currentStepIndex = statusSteps.findIndex(step => step.status === order?.status);\n\n    const fetchOrder = async (idToFetch) => {\n        setStatus('loading');\n        setOrder(null);\n        setComments([]); // Clear comments when fetching new order\n\n        if (!idToFetch) {\n            setStatus('error');\n            return;\n        }\n\n        try {\n            // Fetch order details\n            const { data: orderData, error: orderError } = await supabase\n                .from('custom_orders')\n                .select('*')\n                .eq('order_id', idToFetch)\n                .single();\n\n            if (orderError && orderError.code !== 'PGRST116') { // PGRST116 means no rows found\n                console.error('Error fetching order:', orderError);\n                setStatus('error');\n                return;\n            }\n\n            if (orderData) {\n                setOrder(orderData);\n                setStatus('found');\n\n                // Fetch comments for this order\n                const { data: commentsData, error: commentsError } = await supabase\n                    .from('order_comments')\n                    .select('*')\n                    .eq('order_id', idToFetch)\n                    .order('created_at', { ascending: true });\n\n                if (commentsError) {\n                    console.error('Error fetching comments:', commentsError);\n                    // Don't set status to error for comments, just log\n                } else {\n                    setComments(commentsData);\n                }\n\n            } else {\n                setStatus('not_found');\n            }\n        } catch (err) {\n            console.error('Unexpected error:', err);\n            setStatus('error');\n        }\n    };\n\n    const handleSubmitComment = async (e) => {\n        e.preventDefault();\n        if (!newComment.trim() || !orderId) return;\n\n        const { error } = await supabase\n            .from('order_comments')\n            .insert([\n                {\n                    order_id: orderId,\n                    comment_text: newComment,\n                    is_admin_comment: false // Client comment\n                }\n            ]);\n\n        if (error) {\n            console.error('Error submitting comment:', error);\n            alert('Nie udało się wysłać komentarza.');\n        } else {\n            setNewComment('');\n            // Re-fetch comments for the order to show the new comment\n            const { data: updatedComments, error: commentsError } = await supabase\n                .from('order_comments')\n                .select('*')\n                .eq('order_id', orderId)\n                .order('created_at', { ascending: true });\n\n            if (commentsError) {\n                console.error('Error re-fetching comments after submission:', commentsError);\n            } else {\n                setComments(updatedComments);\n            }\n        }\n    };\n\n    const handleAcceptQuote = async (orderIdToUpdate) => {\n        if (window.confirm('Czy na pewno chcesz zaakceptować tę wycenę?')) {\n            const { error } = await supabase\n                .from('custom_orders')\n                .update({ status: 'zaakceptowane' })\n                .eq('order_id', orderIdToUpdate);\n\n            if (error) {\n                console.error('Error accepting quote:', error);\n                alert('Nie udało się zaakceptować wyceny.');\n            } else {\n                fetchOrder(orderIdToUpdate); // Refresh order status\n            }\n        }\n    };\n\n    const handleRejectQuote = async (orderIdToUpdate) => {\n        if (window.confirm('Czy na pewno chcesz odrzucić tę wycenę?')) {\n            const { error } = await supabase\n                .from('custom_orders')\n                .update({ status: 'odrzucone' })\n                .eq('order_id', orderIdToUpdate);\n\n            if (error) {\n                console.error('Error rejecting quote:', error);\n                alert('Nie udało się odrzucić wyceny.');\n            } else {\n                fetchOrder(orderIdToUpdate); // Refresh order status\n            }\n        }\n    };\n\n    // Fetch order on initialOrderId change (e.g., after form submission)\n    React.useEffect(() => {\n        if (initialOrderId) {\n            setOrderId(initialOrderId);\n            fetchOrder(initialOrderId);\n        }\n    }, [initialOrderId]);\n\n    const handleSearch = (e) => {\n        e.preventDefault();\n        fetchOrder(orderId);\n    };\n\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n                <div className=\"card mb-4 shadow-sm\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title mb-3 text-primary\">Sprawdź status swojego zamówienia</h5>\n                        <form onSubmit={handleSearch}>\n                            <div className=\"input-group mb-3\">\n                                <input\n                                    type=\"text\"\n                                    className=\"form-control form-control-lg\"\n                                    placeholder=\"Wpisz numer zamówienia (np. REX3D-123456789)\"\n                                    value={orderId}\n                                    onChange={(e) => setOrderId(e.target.value)}\n                                    required\n                                />\n                                <button className=\"btn btn-primary btn-lg\" type=\"submit\" disabled={status === 'loading'}>\n                                    {status === 'loading' ? 'Szukanie...' : 'Sprawdź'}\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n                {status === 'found' && order && (\n                    <>\n                    <div className=\"card mt-4 shadow-sm\">\n                        <div className=\"card-header bg-primary text-white\">\n                            <h5 className=\"mb-0 text-white\">Szczegóły Zamówienia: {order.order_id}</h5>\n                        </div>\n                        <div className=\"card-body\">\n                            <div className=\"mb-3\">\n                                <strong>Status:</strong> <span className={`badge ${order.status === 'zakończone' ? 'bg-success' : order.status === 'anulowane' || order.status === 'odrzucone' ? 'bg-danger' : 'bg-info text-dark'}`}>{order.status}</span>\n                            </div>\n\n                            {/* Progress Bar */}\n                            <div className=\"progress mb-3\" style={{ height: '25px' }}>\n                                {statusSteps.map((step, index) => (\n                                    <div\n                                        key={step.status}\n                                        className={`progress-bar ${index <= currentStepIndex ? 'bg-primary' : 'bg-secondary'}`}\n                                        role=\"progressbar\"\n                                        style={{ width: `${100 / statusSteps.length}%` }}\n                                        aria-valuenow={index + 1}\n                                        aria-valuemin=\"0\"\n                                        aria-valuemax={statusSteps.length}\n                                    >\n                                        {step.label}\n                                    </div>\n                                ))}\n                            </div>\n\n                            <h6 className=\"mt-4 mb-2\">Dane zamówienia:</h6>\n                            <ul className=\"list-group list-group-flush\">\n                                <li className=\"list-group-item\"><strong>Opis:</strong> {order.description}</li>\n                                {order.sku && <li className=\"list-group-item\"><strong>SKU:</strong> {order.sku}</li>}\n                                <li className=\"list-group-item\"><strong>Wymiary:</strong> {order.dimensions || 'Brak'}</li>\n                                <li className=\"list-group-item\"><strong>Kolor:</strong> <span style={{ backgroundColor: order.color_hex, padding: '2px 8px', borderRadius: '5px', border: '1px solid #ccc' }}>{order.color_hex}</span></li>\n                                <li className=\"list-group-item\"><strong>Przeznaczenie:</strong> {order.purpose || 'Brak'}</li>\n                                <li className=\"list-group-item\"><strong>Materiał:</strong> {order.material || 'Brak'}</li>\n                                <li className=\"list-group-item\"><strong>Precyzja:</strong> {order.precision || 'Brak'}</li>\n                                <li className=\"list-group-item\"><strong>Ilość:</strong> {order.quantity || 'Brak'}</li>\n                                {order.file_urls && order.file_urls.length > 0 && (\n                                    <li className=\"list-group-item\"><strong>Pliki:</strong>\n                                        {order.file_urls.map((fileUrl, idx) => (\n                                            <span key={idx} className=\"d-block\"><a href={fileUrl} target=\"_blank\" rel=\"noopener noreferrer\">Pobierz plik {idx + 1}</a></span>\n                                        ))}\n                                    </li>\n                                )}\n                            </ul>\n                            \n                            {order.quote_price && (\n                                <div className=\"mt-3\">\n                                    <strong>Wycena:</strong> <span className=\"badge bg-success fs-5\">{order.quote_price} zł</span>\n                                </div>\n                            )}\n                            {order.admin_comment && (\n                                <div className=\"mt-3\">\n                                    <strong>Komentarz Administratora:</strong> <p className=\"d-inline\">{order.admin_comment}</p>\n                                </div>\n                            )}\n\n                            {/* Quote Acceptance/Rejection Buttons */}\n                            {order.quote_price && order.status === 'oczekiwanie na akceptację' && (\n                                <div className=\"mt-4 d-flex justify-content-center\">\n                                    <button className=\"btn btn-success me-2\" onClick={() => handleAcceptQuote(order.order_id)}>Akceptuj Wycenę</button>\n                                    <button className=\"btn btn-danger\" onClick={() => handleRejectQuote(order.order_id)}>Odrzuć Wycenę</button>\n                                </div>\n                            )}\n\n                            <p className=\"text-muted mt-3 mb-0\"><small>Złożono: {new Date(order.created_at).toLocaleString()}</small></p>\n                        </div>\n                    </div>\n\n                    {/* Comments Section */}\n                    {comments.length > 0 && (\n                        <div className=\"card mt-4 shadow-sm\">\n                            <div className=\"card-header bg-light\">\n                                <h5 className=\"mb-0 text-dark\">Historia Komentarzy</h5>\n                            </div>\n                            <div className=\"card-body\">\n                                <div className=\"list-group list-group-flush\">\n                                    {comments.map((comment) => (\n                                        <div key={comment.id} className={`list-group-item ${comment.is_admin_comment ? 'bg-light' : ''}`}>\n                                            <div className=\"d-flex w-100 justify-content-between\">\n                                                <h6 className=\"mb-1\">{comment.is_admin_comment ? 'Administrator' : 'Klient'}</h6>\n                                                <small className=\"text-muted\">{new Date(comment.created_at).toLocaleString()}</small>\n                                            </div>\n                                            <p className=\"mb-1\">{comment.comment_text}</p>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        </div>\n                    )}\n\n                    {/* New Comment Form */}\n                    <div className=\"card mt-4 shadow-sm\">\n                        <div className=\"card-header bg-light\">\n                            <h5 className=\"mb-0 text-dark\">Dodaj Komentarz</h5>\n                        </div>\n                        <div className=\"card-body\">\n                            <form onSubmit={handleSubmitComment}>\n                                <div className=\"mb-3\">\n                                    <textarea\n                                        className=\"form-control\"\n                                        rows=\"3\"\n                                        placeholder=\"Wpisz swój komentarz...\"\n                                        value={newComment}\n                                        onChange={(e) => setNewComment(e.target.value)}\n                                        required\n                                    ></textarea>\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={!newComment.trim()}>\n                                    Wyślij Komentarz\n                                </button>\n                            </form>\n                        </div>\n                    </div>\n                    </>\n                )}\n\n                {status === 'not_found' && (\n                    <div className=\"alert alert-warning mt-4 text-center\" role=\"alert\">\n                        <h4 className=\"alert-heading\">Nie znaleziono zamówienia!</h4>\n                        <p>Sprawdź, czy numer zamówienia jest poprawny i spróbuj ponownie.</p>\n                    </div>\n                )}\n\n                {status === 'error' && (\n                    <div className=\"alert alert-danger mt-4 text-center\" role=\"alert\">\n                        <h4 className=\"alert-heading\">Wystąpił błąd!</h4>\n                        <p>Nie udało się wyszukać zamówienia. Spróbuj ponownie później.</p>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\n// --- Main Combined Component ---\nconst CustomOrderAndStatusPage = () => {\n    const [currentView, setCurrentView] = useState('submit'); // 'submit' or 'status'\n    const [orderIdForStatusCheck, setOrderIdForStatusCheck] = useState(null);\n\n    const handleFormSubmissionSuccess = (orderId) => {\n        setOrderIdForStatusCheck(orderId);\n        setCurrentView('status');\n    };\n\n    return (\n        <div className=\"container mt-5 pt-5\">\n            <div className=\"text-center mb-5\">\n                <h1 className=\"display-4 fw-bold mb-3\">Twoje Niestandardowe Zamówienia 3D</h1>\n                <p className=\"lead text-muted\">\n                    Tutaj możesz złożyć nowe, unikalne zamówienie na druk 3D, idealnie dopasowane do Twoich potrzeb,\n                    lub sprawdzić aktualny status swojego istniejącego projektu.\n                </p>\n                <div className=\"row justify-content-center mt-4\">\n                    <div className=\"col-md-5 mb-3\">\n                        <div className=\"card h-100 p-3 shadow-sm border-primary\">\n                            <div className=\"card-body\">\n                                <i className=\"bi bi-box-seam-fill text-primary fs-1 mb-3\"></i> {/* Example icon */}\n                                <h5 className=\"card-title\">Złóż Nowe Zamówienie</h5>\n                                <p className=\"card-text text-muted\">Opisz swój pomysł, a my zajmiemy się resztą. Od prototypu po gotowy produkt!</p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-5 mb-3\">\n                        <div className=\"card h-100 p-3 shadow-sm border-success\">\n                            <div className=\"card-body\">\n                                <i className=\"bi bi-truck-flatbed text-success fs-1 mb-3\"></i> {/* Example icon */}\n                                <h5 className=\"card-title\">Sprawdź Status</h5>\n                                <p className=\"card-text text-muted\">Śledź postępy swojego zamówienia w czasie rzeczywistym, od wyceny po realizację.</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <ul className=\"nav nav-pills nav-justified mb-4\">\n                <li className=\"nav-item\">\n                    <button \n                        className={`nav-link btn btn-lg ${currentView === 'submit' ? 'active' : ''}`}\n                        onClick={() => setCurrentView('submit')}\n                    >\n                        Złóż nowe zamówienie\n                    </button>\n                </li>\n                <li className=\"nav-item\">\n                    <button \n                        className={`nav-link btn btn-lg ${currentView === 'status' ? 'active' : ''}`}\n                        onClick={() => setCurrentView('status')}\n                    >\n                        Sprawdź status zamówienia\n                    </button>\n                </li>\n            </ul>\n\n            {currentView === 'submit' && (\n                <CustomOrderForm setOrderIdForStatusCheck={handleFormSubmissionSuccess} />\n            )}\n\n            {currentView === 'status' && (\n                <OrderStatusDisplay initialOrderId={orderIdForStatusCheck} />\n            )}\n        </div>\n    );\n};\n\nexport default CustomOrderAndStatusPage;\n"],"names":["CustomOrderForm","_ref","setOrderIdForStatusCheck","formData","setFormData","useState","name","email","description","sku","dimensions","color","purpose","material","precision","quantity","selectedFiles","setSelectedFiles","status","setStatus","navigate","useNavigate","handleChange","e","value","target","prev","_objectSpread","parseInt","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","orderId","concat","Date","now","fileUrls","length","file","split","pop","filePath","error","uploadError","supabase","storage","from","upload","cacheControl","upsert","console","Error","data","publicUrlData","getPublicUrl","push","publicUrl","insertError","insert","order_id","customer_name","customer_email","color_hex","file_urls","state","message","htmlFor","type","id","onChange","required","rows","placeholder","title","min","Array","files","multiple","map","join","disabled","OrderStatusDisplay","_ref2","initialOrderId","setOrderId","order","setOrder","comments","setComments","newComment","setNewComment","statusSteps","label","currentStepIndex","findIndex","step","fetchOrder","idToFetch","orderData","orderError","select","eq","single","code","commentsData","commentsError","ascending","err","React","_Fragment","style","height","index","role","width","backgroundColor","padding","borderRadius","border","fileUrl","idx","href","rel","quote_price","admin_comment","onClick","window","confirm","update","orderIdToUpdate","alert","handleAcceptQuote","handleRejectQuote","created_at","toLocaleString","comment","is_admin_comment","comment_text","trim","updatedComments","CustomOrderAndStatusPage","currentView","setCurrentView","orderIdForStatusCheck"],"sourceRoot":""}