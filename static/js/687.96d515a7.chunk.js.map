{"version":3,"file":"static/js/687.96d515a7.chunk.js","mappings":"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","sources":["components/AddOpinionForm.js","components/StarRating.js","components/SkeletonOpinionCard.js","pages/OpinionPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { supabase } from '../supabase';\n\nconst EditableStarRating = ({ rating, onRatingChange }) => {\n    const [hoverRating, setHoverRating] = useState(0);\n    const stars = Array.from({ length: 5 }, (_, i) => i + 1);\n\n    return (\n        <div>\n            {stars.map(starIndex => (\n                <span\n                    key={starIndex}\n                    className=\"star\"\n                    style={{ cursor: 'pointer', color: (starIndex <= (hoverRating || rating)) ? 'gold' : 'gray' }}\n                    onClick={() => onRatingChange(starIndex)}\n                    onMouseEnter={() => setHoverRating(starIndex)}\n                    onMouseLeave={() => setHoverRating(0)}\n                >\n                    ★\n                </span>\n            ))}\n        </div>\n    );\n};\n\nconst AddOpinionForm = ({ productSku, productName, onSubmitSuccess }) => {\n    const [newOpinion, setNewOpinion] = useState({ autor: '', komentarz: '', rating: 5, sku: productSku || '' });\n    const [status, setStatus] = useState({ isLoading: false, error: null });\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setNewOpinion(prevState => ({ ...prevState, [name]: value }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!newOpinion.autor || !newOpinion.komentarz) {\n            setStatus({ isLoading: false, error: 'Wypełnij wszystkie pola.' });\n            return;\n        }\n\n        setStatus({ isLoading: true, error: null });\n\n        const opinionData = {\n            autor: newOpinion.autor,\n            komentarz: newOpinion.komentarz,\n            rating: parseInt(newOpinion.rating, 10),\n            product_sku: newOpinion.sku || null,\n        };\n\n        const { error } = await supabase.from('opinie').insert([opinionData]);\n\n        if (error) {\n            console.error(\"Error adding opinion: \", error);\n            setStatus({ isLoading: false, error: 'Wystąpił błąd podczas dodawania opinii.' });\n        } else {\n            setStatus({ isLoading: false, error: null });\n            setNewOpinion({ autor: '', komentarz: '', rating: 5, sku: productSku || '' });\n            if (onSubmitSuccess) {\n                onSubmitSuccess();\n            }\n        }\n    };\n\n    return (\n        <div className=\"card mb-4\">\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">Dodaj swoją opinię</h5>\n                {productName && <p className=\"text-muted\">Oceniasz produkt: <strong>{productName}</strong></p>}\n                <form onSubmit={handleSubmit}>\n                    {!productSku && (\n                        <div className=\"mb-3\">\n                            <label htmlFor=\"sku\" className=\"form-label\">SKU Produktu (opcjonalnie)</label>\n                            <input type=\"text\" className=\"form-control\" id=\"sku\" name=\"sku\" value={newOpinion.sku} onChange={handleChange} />\n                        </div>\n                    )}\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"author\" className=\"form-label\">Twoje imię</label>\n                        <input type=\"text\" className=\"form-control\" id=\"author\" name=\"autor\" value={newOpinion.autor} onChange={handleChange} required />\n                    </div>\n                    <div className=\"mb-3\">\n                        <label htmlFor=\"text\" className=\"form-label\">Treść opinii</label>\n                        <textarea className=\"form-control\" id=\"text\" name=\"komentarz\" rows=\"3\" value={newOpinion.komentarz} onChange={handleChange} required></textarea>\n                    </div>\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Ocena:</label>\n                        <EditableStarRating\n                            rating={newOpinion.rating}\n                            onRatingChange={(newRating) => setNewOpinion(prev => ({ ...prev, rating: newRating }))}\n                        />\n                    </div>\n                    \n                    <button type=\"submit\" className=\"btn btn-primary mt-3\" disabled={status.isLoading}>\n                        {status.isLoading ? 'Dodawanie...' : 'Dodaj Opinię'}\n                    </button>\n                    {status.error && <p className=\"text-danger mt-2\">{status.error}</p>}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default AddOpinionForm;\n","import React from 'react';\n\nconst StarRating = ({ rating }) => {\n    const numericRating = Number(rating) || 0;\n    const stars = [];\n    for (let i = 1; i <= 5; i++) {\n        if (i <= numericRating) {\n            stars.push(<span key={i} className=\"text-warning\">★</span>); // Filled star\n        } else {\n            stars.push(<span key={i} className=\"text-muted\">☆</span>); // Empty star\n        }\n    }\n    return <div>{stars}</div>;\n};\n\nexport default StarRating;\n","import React from 'react';\n\nconst SkeletonOpinionCard = () => {\n    return (\n        <div className=\"col-md-6 mb-4\">\n            <div className=\"card h-100 skeleton-card\">\n                <div className=\"card-body\">\n                    <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                        <div className=\"skeleton-text skeleton-title\" style={{ width: '50%' }}></div>\n                        <div className=\"skeleton-text\" style={{ width: '30%', height: '1rem' }}></div>\n                    </div>\n                    <div className=\"skeleton-text\" style={{ width: '40%', height: '1.5rem' }}></div> {/* For stars */}\n                    <div className=\"skeleton-text skeleton-line-1 mt-3\"></div>\n                    <div className=\"skeleton-text skeleton-line-2\"></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SkeletonOpinionCard;\n","import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { supabase } from '../supabase';\nimport StarRating from '../components/StarRating';\nimport AddOpinionForm from '../components/AddOpinionForm';\nimport SkeletonOpinionCard from '../components/SkeletonOpinionCard';\n\nconst OpinionPage = () => {\n    const [opinions, setOpinions] = useState([]);\n    const [status, setStatus] = useState({ isLoading: true, error: null });\n    const [productName, setProductName] = useState('');\n    const [products, setProducts] = useState([]);\n\n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const productSku = queryParams.get('sku');\n\n    const averageRating = useMemo(() => {\n        if (opinions.length === 0) return 0;\n        const total = opinions.reduce((sum, op) => sum + op.rating, 0);\n        return total / opinions.length;\n    }, [opinions]);\n\n    const fetchOpinions = useCallback(async () => {\n        setStatus(prev => ({ ...prev, isLoading: true }));\n        const { data, error } = await supabase\n            .from('opinie')\n            .select('*')\n            .order('created_at', { ascending: false });\n\n        if (error) {\n            console.error('Error fetching opinions:', error);\n            setStatus(prev => ({ ...prev, error: 'Nie udało się załadować opinii.', isLoading: false }));\n        } else {\n            setOpinions(data);\n            setStatus(prev => ({ ...prev, isLoading: false, error: null }));\n        }\n    }, []);\n\n    // Effect for fetching opinions\n    useEffect(() => {\n        fetchOpinions();\n    }, [fetchOpinions]);\n\n    // Effect for fetching all products once\n    useEffect(() => {\n        fetch('/products.json')\n            .then(res => res.json())\n            .then(data => setProducts(data))\n            .catch(error => console.error('Error fetching products:', error));\n    }, []);\n\n    // Effect for finding product name when SKU or products list change\n    useEffect(() => {\n        if (productSku && products.length > 0) {\n            const product = products.find(p => String(p.sku) === productSku);\n            if (product) {\n                setProductName(product.name);\n            }\n        }\n    }, [productSku, products]);\n\n    const getProductNameBySku = (sku) => {\n        const product = products.find(p => String(p.sku) === String(sku));\n        return product ? product.name : sku; // Fallback to SKU if name not found\n    };\n\n    return (\n        <div className=\"container mt-5 pt-5\">\n            <h2 className=\"text-center mb-4\">Opinie Klientów</h2>\n\n            <AddOpinionForm \n                productSku={productSku}\n                productName={productName}\n                onSubmitSuccess={fetchOpinions} \n            />\n\n            <div className=\"card mb-4 text-center p-3 shadow-sm\">\n                <h4 className=\"mb-2\">Podsumowanie Opinii</h4>\n                {opinions.length > 0 ? (\n                    <>\n                        <h5 className=\"mb-1\">Średnia ocena: <span className=\"text-primary fw-bold\">{averageRating.toFixed(1)} / 5</span></h5>\n                        <p className=\"text-muted\">Na podstawie {opinions.length} opinii</p>\n                    </>\n                ) : (\n                    <p className=\"text-muted\">Brak opinii do wyświetlenia.</p>\n                )}\n            </div>\n\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\n                <h4 className=\"mb-0\" key={opinions.length}>Wszystkie opinie ({opinions.length})</h4>\n                <button onClick={fetchOpinions} className=\"btn btn-outline-secondary btn-sm\" disabled={status.isLoading}>\n                    {status.isLoading ? 'Ładowanie...' : 'Odśwież'}\n                </button>\n            </div>\n\n            {status.isLoading ? (\n                <div className=\"row\">\n                    {Array.from({ length: 4 }).map((_, index) => (\n                        <SkeletonOpinionCard key={index} />\n                    ))}\n                </div>\n            ) : (\n                opinions.length === 0 ? (\n                    <div className=\"alert alert-info text-center\" role=\"alert\">\n                        Brak opinii. Bądź pierwszy i dodaj swoją!\n                    </div>\n                ) : (\n                    <div className=\"row\">\n                        {opinions.map((op) => (\n                            <div key={op.id} className=\"col-md-6 mb-4\">\n                                <div className=\"card h-100 shadow-sm\">\n                                    <div className=\"card-body\">\n                                        <div className=\"d-flex justify-content-between align-items-center mb-2\">\n                                            <h5 className=\"card-title mb-0\">{op.autor || \"Anonim\"}</h5>\n                                            <small className=\"text-muted\">{op.created_at ? new Date(op.created_at).toLocaleDateString() : 'Brak daty'}</small>\n                                        </div>\n                                        <StarRating rating={op.rating} />\n                                        <p className=\"card-text mt-2\">{op.komentarz}</p>\n                                        {op.product_sku && \n                                            <small className=\"text-muted\">Opinia o produkcie: <strong>{getProductNameBySku(op.product_sku)}</strong></small>\n                                        }\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                )\n            )}\n        </div>\n    );\n};\n\nexport default OpinionPage;\n"],"names":["EditableStarRating","_ref","rating","onRatingChange","hoverRating","setHoverRating","useState","stars","Array","from","length","_","i","_jsx","children","map","starIndex","className","style","cursor","color","onClick","onMouseEnter","onMouseLeave","_ref2","productSku","productName","onSubmitSuccess","newOpinion","setNewOpinion","autor","komentarz","sku","status","setStatus","isLoading","error","handleChange","e","name","value","target","prevState","_objectSpread","_jsxs","onSubmit","async","preventDefault","opinionData","parseInt","product_sku","supabase","insert","console","htmlFor","type","id","onChange","required","rows","newRating","prev","disabled","numericRating","Number","push","SkeletonOpinionCard","width","height","OpinionPage","opinions","setOpinions","setProductName","products","setProducts","location","useLocation","URLSearchParams","search","get","averageRating","useMemo","reduce","sum","op","fetchOpinions","useCallback","data","select","order","ascending","useEffect","fetch","then","res","json","catch","product","find","p","String","getProductNameBySku","AddOpinionForm","_Fragment","toFixed","index","role","created_at","Date","toLocaleDateString","StarRating"],"sourceRoot":""}